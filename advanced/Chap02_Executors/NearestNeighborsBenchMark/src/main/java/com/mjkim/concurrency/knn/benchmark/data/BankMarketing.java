package com.mjkim.concurrency.knn.benchmark.data;

import lombok.ToString;
import lombok.Data;
import lombok.EqualsAndHashCode;

@Data
@ToString
@EqualsAndHashCode
public class BankMarketing implements Entity {

	private byte age;
	private byte jobAdmin;
	private byte jobBlueCollar;
	private byte jobEntrepreneur;
	private byte jobHousemaid;
	private byte jobManagement;
	private byte jobRetired;
	private byte jobSelfEmployed;
	private byte jobServices;
	private byte jobStudent;
	private byte jobTechnician;
	private byte jobUnemployed;
	private byte jobUnknown;
	private byte maritalDivorced;
	private byte maritalMarried;
	private byte maritalSingle;
	private byte maritalUnknown;
	private byte educationBasic4y;
	private byte educationBasic6y;
	private byte educationBasic9y;
	private byte educationHighSchool;
	private byte educationIlliterate;
	private byte educationProfessionalCourse;
	private byte educationUniversityDegree;
	private byte educationUnknown;
	private byte creditNo;
	private byte creditYes;
	private byte creditUnknown;
	private byte housingNo;
	private byte housingYes;
	private byte housingUnknown;
	private byte loanNo;
	private byte loanYes;
	private byte loanUnknown;
	private byte contactCellular;
	private byte contactTelephone;
	private byte contactJan;
	private byte contactFeb;
	private byte contactMar;
	private byte contactApr;
	private byte contactMay;
	private byte contactJun;
	private byte contactJul;
	private byte contactAug;
	private byte contactSep;
	private byte contactOct;
	private byte contactNov;
	private byte contactDec;
	private byte contactMon;
	private byte contactTue;
	private byte contactWed;
	private byte contactThu;
	private byte contactFri;
	private int duration;
	private byte campaign;
	private int pdays;
	private byte pdaysNever;
	private byte previous;
	private byte poutcomeFailure;
	private byte poutcomeNonexistent;
	private byte poutcomeSuccess;
	private float empVarRate;
	private float consPriceIdx;
	private float consConfIdx;
	private float euribor3m;
	private float nrEmployed;
	private String target;
	
	public void setData(String []data) throws Exception {
		
		if (data.length!=67) {
			throw new Exception("Wrong data length: "+data.length);
		}
		age=Byte.valueOf(data[0]);
		jobAdmin=Byte.valueOf(data[1]);
		jobBlueCollar=Byte.valueOf(data[2]);
		jobEntrepreneur=Byte.valueOf(data[3]);
		jobHousemaid=Byte.valueOf(data[4]);
		jobManagement=Byte.valueOf(data[5]);
		jobRetired=Byte.valueOf(data[6]);
		jobSelfEmployed=Byte.valueOf(data[7]);
		jobServices=Byte.valueOf(data[8]);
		jobStudent=Byte.valueOf(data[9]);
		jobTechnician=Byte.valueOf(data[10]);
		jobUnemployed=Byte.valueOf(data[11]);
		jobUnknown=Byte.valueOf(data[12]);
		maritalDivorced=Byte.valueOf(data[13]);
		maritalMarried=Byte.valueOf(data[14]);
		maritalSingle=Byte.valueOf(data[15]);
		maritalUnknown=Byte.valueOf(data[16]);
		educationBasic4y=Byte.valueOf(data[17]);
		educationBasic6y=Byte.valueOf(data[18]);
		educationBasic9y=Byte.valueOf(data[19]);
		educationHighSchool=Byte.valueOf(data[20]);
		educationIlliterate=Byte.valueOf(data[21]);
		educationProfessionalCourse=Byte.valueOf(data[22]);
		educationUniversityDegree=Byte.valueOf(data[23]);
		educationUnknown=Byte.valueOf(data[24]);
		creditNo=Byte.valueOf(data[25]);
		creditYes=Byte.valueOf(data[26]);
		creditUnknown=Byte.valueOf(data[27]);
		housingNo=Byte.valueOf(data[28]);
		housingYes=Byte.valueOf(data[29]);
		housingUnknown=Byte.valueOf(data[30]);
		loanNo=Byte.valueOf(data[31]);
		loanYes=Byte.valueOf(data[32]);
		loanUnknown=Byte.valueOf(data[33]);
		contactCellular=Byte.valueOf(data[34]);
		contactTelephone=Byte.valueOf(data[35]);
		contactJan=Byte.valueOf(data[36]);
		contactFeb=Byte.valueOf(data[37]);
		contactMar=Byte.valueOf(data[38]);
		contactApr=Byte.valueOf(data[39]);
		contactMay=Byte.valueOf(data[40]);
		contactJun=Byte.valueOf(data[41]);
		contactJul=Byte.valueOf(data[42]);
		contactAug=Byte.valueOf(data[43]);
		contactSep=Byte.valueOf(data[44]);
		contactOct=Byte.valueOf(data[45]);
		contactNov=Byte.valueOf(data[46]);
		contactDec=Byte.valueOf(data[47]);
		contactMon=Byte.valueOf(data[48]);
		contactTue=Byte.valueOf(data[49]);
		contactWed=Byte.valueOf(data[50]);
		contactThu=Byte.valueOf(data[51]);
		contactFri=Byte.valueOf(data[52]);
		duration=Integer.valueOf(data[53]);
		campaign=Byte.valueOf(data[54]);
		pdays=Integer.valueOf(data[55]);
		pdaysNever=Byte.valueOf(data[56]);
		previous=Byte.valueOf(data[57]);
		poutcomeFailure=Byte.valueOf(data[58]);
		poutcomeNonexistent=Byte.valueOf(data[59]);
		poutcomeSuccess=Byte.valueOf(data[60]);
		empVarRate=Float.valueOf(data[61]);
		consPriceIdx=Float.valueOf(data[62]);
		consConfIdx=Float.valueOf(data[63]);
		euribor3m=Float.valueOf(data[64]);
		nrEmployed=Float.valueOf(data[65]);
		target=data[66];
		
	}

	public String getTag() {
		return this.target;
	}
	
	public double[] getScores() {
		double ret[]=new double[66];
		ret[0]=age;
		ret[1]=jobAdmin;
		ret[2]=jobBlueCollar;
		ret[3]=jobEntrepreneur;
		ret[4]=jobHousemaid;
		ret[5]=jobManagement;
		ret[6]=jobRetired;
		ret[7]=jobSelfEmployed;
		ret[8]=jobServices;
		ret[9]=jobStudent;
		ret[10]=jobTechnician;
		ret[11]=jobUnemployed;
		ret[12]=jobUnknown;
		ret[13]=maritalDivorced;
		ret[14]=maritalMarried;
		ret[15]=maritalSingle;
		ret[16]=maritalUnknown;
		ret[17]=educationBasic4y;
		ret[18]=educationBasic6y;
		ret[19]=educationBasic9y;
		ret[20]=educationHighSchool;
		ret[21]=educationIlliterate;
		ret[22]=educationProfessionalCourse;
		ret[23]=educationUniversityDegree;
		ret[24]=educationUnknown;
		ret[25]=creditNo;
		ret[26]=creditYes;
		ret[27]=creditUnknown;
		ret[28]=housingNo;
		ret[29]=housingYes;
		ret[30]=housingUnknown;
		ret[31]=loanNo;
		ret[32]=loanYes;
		ret[33]=loanUnknown;
		ret[34]=contactCellular;
		ret[35]=contactTelephone;
		ret[36]=contactJan;
		ret[37]=contactFeb;
		ret[38]=contactMar;
		ret[39]=contactApr;
		ret[40]=contactMay;
		ret[41]=contactJun;
		ret[42]=contactJul;
		ret[43]=contactAug;
		ret[44]=contactSep;
		ret[45]=contactOct;
		ret[46]=contactNov;
		ret[47]=contactDec;
		ret[48]=contactMon;
		ret[49]=contactTue;
		ret[50]=contactWed;
		ret[51]=contactThu;
		ret[52]=contactFri;
		ret[53]=duration;
		ret[54]=campaign;
		ret[55]=pdays;
		ret[56]=pdaysNever;
		ret[57]=previous;
		ret[58]=poutcomeFailure;
		ret[59]=poutcomeNonexistent;
		ret[60]=poutcomeSuccess;
		ret[61]=empVarRate;
		ret[62]=consPriceIdx;
		ret[63]=consConfIdx;
		ret[64]=euribor3m;
		ret[65]=nrEmployed;
		return ret;
	}
}
